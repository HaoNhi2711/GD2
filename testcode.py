import sqlite3
import pandas as pd
import requests

# C·∫•u h√¨nh API AI (thay th·∫ø b·∫±ng API key c·ªßa b·∫°n)
API_KEY = "your_openai_api_key"
GEMINI_API_URL = "https://gemini.googleapis.com/v1/your_endpoint"

# H√†m ƒë·ªçc d·ªØ li·ªáu t·ª´ CSV v√†o database
def load_csv_to_db(csv_file):
    conn = sqlite3.connect("y_hoc.db")
    cursor = conn.cursor()

    # T·∫°o b·∫£ng n·∫øu ch∆∞a c√≥
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS medical_data (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            question TEXT UNIQUE,
            answer TEXT
        )
    """)

    # ƒê·ªçc file CSV
    df = pd.read_csv(csv_file)

    # Th√™m d·ªØ li·ªáu v√†o database
    for _, row in df.iterrows():
        cursor.execute("INSERT OR IGNORE INTO medical_data (question, answer) VALUES (?, ?)", (row["B·ªánh"], row["M√¥ t·∫£"]))

    conn.commit()
    conn.close()
    print("‚úÖ D·ªØ li·ªáu t·ª´ CSV ƒë√£ ƒë∆∞·ª£c t·∫£i v√†o database!")

# H√†m truy v·∫•n database
def query_database(question):
    conn = sqlite3.connect("y_hoc.db")
    cursor = conn.cursor()
    cursor.execute("SELECT answer FROM medical_data WHERE question = ?", (question,))
    result = cursor.fetchone()
    conn.close()
    return result[0] if result else None

# H√†m g·ªçi AI ƒë·ªÉ l·∫•y c√¢u tr·∫£ l·ªùi n·∫øu database kh√¥ng c√≥
def send_message_to_ai(prompt):
    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json",
    }
    data = {
        "prompt": f"C√¢u h·ªèi: {prompt}\nTr·∫£ l·ªùi:",
        "max_tokens": 150,
        "temperature": 0.7,
    }
    response = requests.post(GEMINI_API_URL, headers=headers, json=data)
    if response.status_code == 200:
        return response.json().get("response", "Xin l·ªói, t√¥i kh√¥ng c√≥ c√¢u tr·∫£ l·ªùi cho c√¢u h·ªèi n√†y.")
    else:
        return "C√≥ l·ªói x·∫£y ra khi k·∫øt n·ªëi v·ªõi AI."

# H√†m l∆∞u c√¢u tr·∫£ l·ªùi m·ªõi v√†o database
def save_to_database(question, answer):
    conn = sqlite3.connect("y_hoc.db")
    cursor = conn.cursor()
    cursor.execute("INSERT OR IGNORE INTO medical_data (question, answer) VALUES (?, ?)", (question, answer))
    conn.commit()
    conn.close()

# H√†m ch√≠nh
def main():
    # Load d·ªØ li·ªáu t·ª´ file CSV v√†o database
    load_csv_to_db("y_hoc_data.csv")

    print("ü§ñ Chatbot Y h·ªçc s·∫µn s√†ng! G√µ 'exit' ƒë·ªÉ tho√°t.")
    while True:
        question = input("B·∫°n: ").strip()
        if question.lower() == "exit":
            break
        
        # Ki·ªÉm tra trong database tr∆∞·ªõc
        answer = query_database(question)
        if not answer:
            answer = send_message_to_ai(question)  # G·ªçi AI n·∫øu kh√¥ng c√≥ d·ªØ li·ªáu
            save_to_database(question, answer)  # L∆∞u c√¢u tr·∫£ l·ªùi m·ªõi v√†o database
        
        print(f"Bot: {answer}")

# Ch·∫°y ch∆∞∆°ng tr√¨nh
if __name__ == "__main__":
    main()
